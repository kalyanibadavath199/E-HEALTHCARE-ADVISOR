version: '3.8'

services:
  # Frontend Application
  frontend:
    build: .
    container_name: healthcare-frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - healthcare-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: healthcare-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - healthcare-network

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: healthcare-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-lb.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
    restart: unless-stopped
    networks:
      - healthcare-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: healthcare-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - healthcare-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: healthcare-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - healthcare-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  healthcare-network:
    driver: bridge